# ===================================
#   Problem statement & information
# ===================================

# Given two -element data sets, X and Y, calculate the value of the Pearson correlation coefficient.

# Difficulty: Easy
# Max Score: 30
# Language: Python

# ===================================
#              Solution
# ===================================

# ===================================
#             Method 1
# ===================================

#!/bin/python3

def stdDev(array):
    s = 0
    for k in range(len(array)):
        s += ((array[k] - sum(array) / len(array)) **2) / len(array)
    return s ** 0.5
    
def mean(array):
    c = 0
    for k in range(len(array)):
        c += array[k]
    return c/len(array)

def Pcorr(num, setX, setY):
    sdX, sdY = stdDev(setX), stdDev(setY)
    xm, ym = mean(setX), mean(setY)
    cov = 0
    for k in range(num):
        cov += (setX[k]-xm)*(setY[k]-ym)
    return cov/(num*sdX*sdY)
    
if __name__ == '__main__':
    
    n = int(input().strip())
    
    X = list(map(float, input().strip().split()))
    Y = list(map(float, input().strip().split()))
    
    print(round(Pcorr(n, X, Y), 3))


# ===================================
#             Method 2
# ===================================

#!/bin/python3

def stdDev(array):
    mean = sum(array) / len(array)
    var = sum((x - mean) ** 2 for x in array) / len(array)
    return var ** 0.5
    
def Pcorr(num, setX, setY):
    sdX, sdY = stdDev(setX), stdDev(setY)
    xm, ym = sum(setX)/len(setX), sum(setY)/len(setY)
    cov = sum((i-xm)*(j-ym) for i, j in zip(setX, setY))/(num*sdX*sdY)
    return cov
    
if __name__ == '__main__':
    
    n = int(input().strip())
    
    X = list(map(float, input().strip().split()))
    Y = list(map(float, input().strip().split()))
    
    print(round(Pcorr(n, X, Y), 3))
